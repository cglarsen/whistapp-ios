//
//  SeasonsViewController.swift
//  WhistApp
//
//  Created by Christian Graver on 07/12/2020.
//  Copyright (c) 2020 Gravr. All rights reserved.
//
//  This file was generated by the Daman Clean Swift Xcode Templates
//  with inspiration from http://clean-swift.com
//

import UIKit

protocol SeasonsDisplayLogic: class {
    func displaySeasons(viewModel: [Seasons.DisplayData.Season])
    func displayNewSeason(viewModel: Seasons.DisplayData.Season)
}

class SeasonsViewController: UIViewController {
    
    // MARK: - Outlets
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var yearLabel: UILabel!
    
    // MARK: - Properties
    var interactor: SeasonsBusinessLogic?
    var router: (NSObjectProtocol & SeasonsRoutingLogic & SeasonsDataPassing)?
    
    // MARK: - Init
    class func instantiate() -> SeasonsViewController {
        let name = "\(SeasonsViewController.self)"
        let storyboard = UIStoryboard(name: name, bundle: nil)
        let vc = storyboard.instantiateViewController(withIdentifier: name) as! SeasonsViewController
        vc.setup()
        return vc
    }
    
    // MARK: - Setup
    private func setup() {
        let viewController = self
        let interactor = SeasonsInteractor(repository: ParseRepository.instance)
        let presenter = SeasonsPresenter()
        let router = SeasonsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.viewCreated(request: .init())
    }
    
    // MARK: - Actions
    @IBAction func createSeasonPressed(_ sender: Any) {
        let newSeason = Seasons.Request.CreateSeason(name: "New season",
                                                     year: 1000)
        interactor?.createSeason(request: newSeason)
    }
    
    // MARK: - Misc
    private func setupView() {
        self.navigationItem.title = "Seasons"
    }
}

// MARK: - SeasonsDisplayLogic
extension SeasonsViewController: SeasonsDisplayLogic {
    func displayNewSeason(viewModel: Seasons.DisplayData.Season) {
        nameLabel.text = viewModel.name
        yearLabel.text = "\(viewModel.year)"
    }
    
    func displaySeasons(viewModel: [Seasons.DisplayData.Season]) {
        print(viewModel)
    }
}
