//
//  MatchesInteractor.swift
//  WhistApp
//
//  Created by Christian Graver on 14/01/2021.
//  Copyright (c) 2021 Gravr. All rights reserved.
//
//  This file was generated by the Daman Clean Swift Xcode Templates
//  with inspiration from http://clean-swift.com
//

import UIKit

protocol MatchesBusinessLogic {
    func viewCreated(request: Matches.Request.ViewCreated)
}

protocol MatchesDataStore {
    var season: Season? { get set }
    var matches: [Match] { get set }
}

class MatchesInteractor: MatchesDataStore {
    var season: Season?
    var matches: [Match] = []
    
    var presenter: MatchesPresentationLogic?
    var worker: MatchesWorker?
    
    init(repository: MatchRepository) {
        self.worker = MatchesWorker(service: repository)
    }
}

extension MatchesInteractor: MatchesBusinessLogic {
    func viewCreated(request: Matches.Request.ViewCreated) {
        guard let seasonId = season?.id else {return}
        worker?.getMatches(for: seasonId, completion: { (response) in
            switch response.result {
            case .success(let matches):
                self.matches = matches
                self.presenter?.presentMatches(response: matches)
            case .failure(let error):
                print("GetMatches error in MatchesInteractor: \(error)")
            }
        })
    }
}
