//
//  MatchGamesViewController.swift
//  WhistApp
//
//  Created by Christian Graver on 17/01/2021.
//  Copyright (c) 2021 Gravr. All rights reserved.
//
//  This file was generated by the Daman Clean Swift Xcode Templates
//  with inspiration from http://clean-swift.com
//

import UIKit
import SnapKit

protocol MatchGamesDisplayLogic: class {
}

class MatchGamesViewController: UIViewController {
    
    // MARK: - Outlets
    
    // MARK: - Properties
    var interactor: MatchGamesBusinessLogic?
    var router: (NSObjectProtocol & MatchGamesRoutingLogic & MatchGamesDataPassing)?
    
    // MARK: - Init
    class func instantiate() -> MatchGamesViewController {
        let name = "\(MatchGamesViewController.self)"
        let storyboard = UIStoryboard(name: name, bundle: nil)
        let vc = storyboard.instantiateViewController(withIdentifier: name) as! MatchGamesViewController
        vc.setup()
        return vc
    }
    
    // MARK: - Setup
    private func setup() {
        let viewController = self
        let interactor = MatchGamesInteractor()
        let presenter = MatchGamesPresenter()
        let router = MatchGamesRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    // MARK: - Actions
    @objc func addGamePressed() {
        print("addGamePressed")
        router?.addGamePressed()    
    }
    
    // MARK: - Misc
    
    private func setupView() {
        let addGameButton = UIButton(type: .contactAdd)
        addGameButton.addTarget(self, action: #selector(addGamePressed), for: .touchUpInside)
        let barButtonItem = UIBarButtonItem(customView: addGameButton)
        navigationItem.setRightBarButton(barButtonItem, animated: false)
        
        view.addSubview(addGameButton)
        addGameButton.snp.makeConstraints { (make) in
            make.width.equalTo(25.0)
            make.height.equalTo(25.0)
            make.trailing.equalTo(view.snp.trailing).offset(-5)
            make.bottom.equalTo(view.snp.bottom).offset(-5)
        }
    }
}

// MARK: - MatchGamesDisplayLogic
extension MatchGamesViewController: MatchGamesDisplayLogic {
    
}
